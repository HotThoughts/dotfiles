format = """
$username\
$hostname\
$shlvl\
$singularity\
$kubernetes\
$directory\
$vcsh\
${custom.jj}\
${custom.jjstate}\
$cmd_duration\
$fill   \
$status\
$hg_branch\
$docker_context\
$package\
$cmake\
$cobol\
$dart\
$deno\
$dotnet\
$elixir\
$elm\
$erlang\
$golang\
$helm\
$java\
$julia\
$kotlin\
$lua\
$nim\
$nodejs\
$ocaml\
$perl\
$php\
$pulumi\
$purescript\
$python\
$rlang\
$red\
$ruby\
$rust\
$scala\
$swift\
$terraform\
$vlang\
$vagrant\
$zig\
$nix_shell\
$conda\
$memory_usage\
$aws\
$gcloud\
$openstack\
$env_var\
$crystal\
$custom\
$time\
$line_break\
$jobs\
$battery\
$shell\
$character"""

# Inserts a blank line between shell prompts
add_newline = false
command_timeout = 1500

[fill]
symbol = " "
style = "bright-black"

[directory]
read_only = " "
format = "[$path]($style)[$read_only]($read_only_style) "
truncation_length = 3
truncate_to_repo = false
truncation_symbol = "…/"
style = "blue"

[time]
disabled = false
format = 'at [$time]($style)'

[git_branch]
symbol = " "
style = "bright-black"
format = "[$branch]($style)"

[git_status]
format = "[[(*$conflicted$untracked$modified$staged$renamed$deleted)](218) ($ahead_behind$stashed)]($style)"
style = "cyan"
conflicted = "​"
untracked = "​"
modified = "​"
staged = "​"
renamed = "​"
deleted = "​"
stashed = "≡"

[git_state]
format = '\([$state( $progress_current/$progress_total)]($style)\) '
style = "bright-black"

[cmd_duration]
min_time = 2_000
style = "yellow"
format = " [$duration]($style)"
show_notifications = true
min_time_to_notify = 45_000

[status]
symbol = "✘"
format = '[$symbol $common_meaning$signal_name$maybe_int]($style) '
map_symbol = true
disabled = false

[terraform]
format = 'via [ $version \($workspace\)]($style) '

[kubernetes]
format = 'on [ $context \($namespace\)](dimmed green) '
disabled = false

# Nerd font
[aws]
symbol = "  "
format = 'on [$symbol($profile )(\($region\) )(\[$duration\] )]($style)'

[conda]
symbol = " "

[dart]
symbol = " "

[docker_context]
symbol = " "

[elixir]
symbol = " "

[elm]
symbol = " "

[golang]
symbol = " "

[gcloud]
symbol = "  "
format = 'on [$symbol$account(@$domain) (\($project\))]($style) '
disabled = true

[hg_branch]
symbol = " "

[java]
symbol = " "

[julia]
symbol = " "

[memory_usage]
symbol = " "

[lua]
symbol = " "

[nim]
symbol = " "

[nix_shell]
symbol = " "

[package]
symbol = " "

[perl]
symbol = " "

[php]
symbol = " "

[python]
symbol = " "

[ruby]
symbol = " "

[rust]
symbol = " "

[scala]
symbol = " "

[shlvl]
symbol = " "

[swift]
symbol = "ﯣ "

[custom.jj]
command = '''
jj log -r@ -n1 --ignore-working-copy --no-graph --color always  -T '
  separate(" ",
    bookmarks.map(|x| if(
        x.name().substr(0, 10).starts_with(x.name()),
        x.name().substr(0, 10),
        x.name().substr(0, 9) ++ "…")
      ).join(" "),
    tags.map(|x| if(
        x.name().substr(0, 10).starts_with(x.name()),
        x.name().substr(0, 10),
        x.name().substr(0, 9) ++ "…")
      ).join(" "),
    surround("\"","\"",
      if(
         description.first_line().substr(0, 24).starts_with(description.first_line()),
         description.first_line().substr(0, 24),
         description.first_line().substr(0, 23) ++ "…"
      )
    ),
    if(conflict, "conflict"),
    if(divergent, "divergent"),
    if(hidden, "hidden"),
  )
'
'''
when = "jj root"
symbol = "jj"

[custom.jjstate]
when = "jj root"
command = '''
jj log -r@ -n1 --no-graph -T "" --stat | tail -n1 | sd "(\d+) files? changed, (\d+) insertions?\(\+\), (\d+) deletions?\(-\)" ' ${1}m ${2}+ ${3}-' | sd " 0." ""
'''
